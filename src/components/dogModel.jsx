/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export const DogModel =  (props) =>  {
  const group = useRef();
  const { nodes, materials } = useGLTF("/dog.glb");
  useFrame((state, delta) => (group.current.rotation.x += 0.002))

  return (
    <group ref={group} {...props} dispose={null}>
      <group>

        <group position={[-0.3, 0.09, 0]} scale={0.53}>
          <mesh
            castShadow          
            geometry={nodes.Cube_1.geometry}
            material={materials.fur_light}
          />
          <mesh
            castShadow          
            geometry={nodes.Cube_2.geometry}
            material={materials.eye1}
          />
          <mesh
            castShadow          
            geometry={nodes.Cube_3.geometry}
            material={materials.eye2}
          />
          <mesh
            castShadow          
            geometry={nodes.Cube_4.geometry}
            material={materials.fur_dark}
          />
          <mesh
            castShadow          
            geometry={nodes.Cube_5.geometry}
            material={materials.tongue}
          />
          <mesh
            castShadow          
            geometry={nodes.Cube_6.geometry}
            material={nodes.Cube_6.material}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={nodes.Cube001.material}
          position={[-0.3, 0.09, 0]}
          scale={0.53}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={nodes.Cube002.material}
          position={[-0.71, -0.06, 0]}
        />
      </group>
      {/* <group name="skateboard">
        <group position={[0.1, -0.65, 0]}>
          <mesh
            castShadow
            geometry={nodes.Cube001_1.geometry}
            material={materials.griptape}
          />
          <mesh
            castShadow
            geometry={nodes.Cube001_2.geometry}
            material={materials.wood}
          />
          <mesh
            castShadow
            geometry={nodes.Cube001_3.geometry}
            material={materials.metal}
          />
          <mesh
            castShadow
            geometry={nodes.Cube001_4.geometry}
            material={materials.wheel}
          />
          <mesh
            castShadow
            geometry={nodes.Cube001_5.geometry}
            material={materials["wheel.001"]}
          />
        </group>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane.geometry}
          material={nodes.Plane.material}
          position={[0.1, -0.65, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube004.geometry}
          material={materials["outline.001"]}
          position={[0.1, -0.65, 0]}
        />
      </group> */}
    </group>
  );
}

useGLTF.preload("/dog.glb");

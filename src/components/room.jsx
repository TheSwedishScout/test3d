/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { MeshReflectorMaterial, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export const Room =  (props) =>  {
  const group = useRef();
  // useFrame((state, delta) => (group.current.rotation.z += 0.01))

  return (
    <group  ref={group} {...props} dispose={null}>
      <mesh receiveShadow castShadow position={[0, -1, 0]}> 
        <boxGeometry receiveShadow args={[23,1,23]} />
        <MeshReflectorMaterial  resolution={4098}  mixBlur={0.5} blur={[20, 20]}  color='#7e7e7e' />
      </mesh>
      {/* <mesh castShadow receiveShadow position={[0,23, 0,]}> 
        <boxGeometry  receiveShadow args={[23,1,23]} />
        <meshStandardMaterial />
      </mesh> */}
      {/* <mesh castShadow receiveShadow position={[11,11, 0,]}> 
        <boxGeometry  receiveShadow args={[1,23,23]} />
        <meshStandardMaterial  color='#720927' />
      </mesh>
      <mesh castShadow receiveShadow position={[-11,11, 0,]}> 
        <boxGeometry  receiveShadow args={[1,23,23]} />
        <meshStandardMaterial  color='#2a197c' />
      </mesh> */}
      {/* <mesh castShadow receiveShadow position={[0,11, 11,]}> 
        <boxGeometry  receiveShadow args={[23,23,1]} />
        <meshStandardMaterial />
      </mesh> */}
      {/* <mesh castShadow receiveShadow position={[0,11, -11,]}> 
        <boxGeometry  receiveShadow args={[23,23,1]} />
        <meshStandardMaterial color='#095a72' />
      </mesh> */}
    </group>
  );
}

useGLTF.preload("/dog.glb");
